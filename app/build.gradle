apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'
apply plugin: 'androidx.navigation.safeargs.kotlin'
android {
    compileSdkVersion 30
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.zainco.library"
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        buildConfigField("String", "API_URL", "\"https://reqres.in/api/\"")
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation":
                                     "$projectDir/schemas".toString()]
            }
        }
    }
    flavorDimensions "libraryFree"
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
//            applicationIdSuffix ".debug"
        }
    }

    kapt.includeCompileClasspath = false
    /*productFlavors {
           free {
               dimension "libraryFree"
               applicationId = "com.zainco.library.free"
               manifestPlaceholders = [appName : "Freeeee"]
           }
           paid {
               dimension "libraryFree"
               applicationId = "com.zainco.library.pro"
               manifestPlaceholders = [appName : "paiddddd"]
           }
       }*/
    buildFeatures {
        dataBinding true
    }

    kapt {
        generateStubs = true
    }

    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }
        androidTest.java.srcDirs += "src/test-common/java"
        test.java.srcDirs += "src/test-common/java"
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'LICENSE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'
    }


    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "androidx.annotation:annotation:1.1.0"
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0-alpha03'
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'com.google.firebase:firebase-config:20.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.1.0'
    implementation "androidx.legacy:legacy-support-v4:1.0.0"
    //glide
    implementation 'com.github.bumptech.glide:glide:4.11.0'
    kapt 'com.github.bumptech.glide:compiler:4.11.0'

    //for viewmodel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.2.0"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:2.2.0"

    testImplementation 'junit:junit:4.13'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'


    def retrofitVersion = "2.7.1"
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-moshi:2.6.2"

    def rxjava_version = '2.1.1'
    implementation "io.reactivex.rxjava2:rxjava:$rxjava_version"
    implementation "io.reactivex.rxjava2:rxandroid:$rxjava_version"

    // Rx-Retrofit Call Adapter
    def rxcalladapter_version = '2.5.0'
    implementation "com.squareup.retrofit2:adapter-rxjava2:$rxcalladapter_version"

    // Reactive Streams (convert Observable to LiveData)
    def reactivestreams_version = "1.1.1"
    implementation "android.arch.lifecycle:reactivestreams:$reactivestreams_version"

    // Timber
    implementation 'com.jakewharton.timber:timber:4.7.1'

    // MPAndroidChart
    implementation 'com.github.PhilJay:MPAndroidChart:v3.1.0'

    implementation 'android.arch.lifecycle:extensions:1.1.1'

    //rxbinding library
    implementation 'com.jakewharton.rxbinding:rxbinding:0.4.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
    implementation 'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'

    //paging
    implementation 'android.arch.paging:runtime:1.0.1'

// Easy Permissions
    implementation 'pub.devrel:easypermissions:3.0.0'


    implementation 'com.squareup.picasso:picasso:2.71828'

    //okhttp
    implementation 'com.squareup.okhttp3:logging-interceptor:4.7.2'

// Navigation
    implementation 'android.arch.navigation:navigation-fragment-ktx:1.0.0'
    implementation 'android.arch.navigation:navigation-fragment:1.0.0'
    implementation 'android.arch.navigation:navigation-ui-ktx:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    //room
    def room_version = '2.2.5'
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    implementation "androidx.room:room-ktx:$room_version"
    // Koin
    implementation deps.koin.core
    implementation deps.koin.android
    implementation deps.koin.architecture
    //Dagger - Hilt
    implementation "com.google.dagger:hilt-android:2.28-alpha"
    kapt "com.google.dagger:hilt-android-compiler:2.28-alpha"

    implementation "androidx.hilt:hilt-lifecycle-viewmodel:1.0.0-alpha02"
    kapt "androidx.hilt:hilt-compiler:1.0.0-alpha02"
    implementation 'com.facebook.fresco:fresco:1.9.0'
    implementation 'org.mockito:mockito-core:3.3.3'
    implementation 'com.google.firebase:firebase-analytics:18.0.0'
    implementation 'com.facebook.android:facebook-android-sdk:5.15.3'

    // Add the Firebase SDK for Crashlytics.
    implementation 'com.google.firebase:firebase-crashlytics:17.2.2'

    //test
    def hamcrestVersion = '1.3'
    def androidXTestVersion = '1.1.1'
    def espressoVersion = '3.1.0-alpha4'
    def runnerExtVersion = '1.1.1'
    implementation 'com.facebook.android:facebook-login:5.15.3'
    //work manager
    implementation "android.arch.work:work-runtime-ktx:2.2.0"

    //coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'

    //moshi
    implementation "com.squareup.moshi:moshi:1.9.3"
    kapt "com.squareup.moshi:moshi-kotlin-codegen:1.9.3"

    // Google Maps Location Services
    implementation 'com.google.android.gms:play-services-location:17.1.0'
    implementation 'com.google.android.gms:play-services-maps:17.0.0'
   // Activity KTX for viewModels()
    implementation "androidx.activity:activity-ktx:1.1.0"
    implementation "androidx.fragment:fragment-ktx:1.2.5"

    implementation 'com.google.android.gms:play-services-ads:19.5.0'

    implementation 'org.jsoup:jsoup:1.14.2'

    testImplementation "org.hamcrest:hamcrest-all:$hamcrestVersion"
    androidTestImplementation "androidx.test:runner:$androidXTestVersion"
    androidTestImplementation "androidx.test.ext:junit:$runnerExtVersion"
    androidTestImplementation "androidx.test:rules:$androidXTestVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
}
task hello {
    description "Hey student! Run this one :D"
    group "Our demo"
    doLast {
        println "Hello World!"
    }
}
//to start the terminal >gradlew
//>gradlew hello executes hello task

